plugins {
	id 'fabric-loom' version '0.2.5-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}
repositories {
	// CANVAS
	// maven {
    // 	name = "grondag"
    // 	url = "https://grondag-repo.appspot.com"
    // 	credentials {
    //         username "guest"
    //         password ""
	// 	}
    // }
	// maven {
	// 	name = "jitpack"
	// 	url = "https://jitpack.io"
	// }
	// CottonMC
	 maven {
	 		name = "Cotton"
	 		url = "http://server.bbkr.space:8081/artifactory/libs-release"
	 	}
	maven {
		name = "Reflections"
		url = "https://mvnrepository.com/artifact/org.reflections/reflections"
	}
	maven {
        name = "NerdHubMC"
        url = "https://maven.abusedmaster.xyz"
    }
	maven {
        name = "JitPack"
        url "https://jitpack.io"
    }
}
dependencies {
	// required
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	implementation "org.reflections:reflections:${project.reflections_version}"

	// development
	modImplementation "io.github.prospector:orderly:${project.orderly_version}"
	include "io.github.prospector:orderly:${project.orderly_version}"
	modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
	include "io.github.cottonmc:LibGui:${project.libgui_version}"
	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
//	modApi "com.github.tr7zw:FirstPersonModel-Fabric:${project.first_person_model_version}"
    modImplementation "com.github.Pyrofab:Cardinal-Components-API:${project.cardinal_components_api_version}"
	include "com.github.Pyrofab:Cardinal-Components-API:${project.cardinal_components_api_version}"
	// production
//	modImplementation "io.github.prospector:orderly:${project.orderly_version}"
//	modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
//	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
////	modImplementation "com.github.tr7zw:FirstPersonModel-Fabric:${project.first_person_model_version}"

}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
